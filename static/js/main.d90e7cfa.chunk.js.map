{"version":3,"sources":["components/Layout.js","components/Wrapper.js","components/TDListItem.js","components/ListContainer.js","reportWebVitals.js","index.js","test-hooks.js"],"names":["Layout","memo","props","Paper","elevation","style","padding","margin","AppBar","color","position","height","Toolbar","href","className","Typography","id","children","Wrapper","FormControl","noValidate","autoComplete","variant","value","inputValue","onChange","onInputChange","onKeyPress","onInputKeyPress","fullWidth","InputLabel","htmlFor","OutlinedInput","labelWidth","Button","onClick","onButtonClick","TDListItem","ListItem","divider","Checkbox","onCheckBoxToggle","checked","disableRipple","ListItemText","primary","text","ListItemSecondaryAction","IconButton","aria-label","ListContainer","items","length","List","overflow","map","td","index","key","onItemRemove","onItemCheck","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TodoApp","initialValue","useState","setInputValue","changeInput","event","target","clearInput","keyInput","callback","which","keyCode","useInputValue","todos","setTodos","addTodo","concat","checkTodo","idx","todo","removeTodo","filter","useTodos","clearInputAndAddTodo","_","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.d90e7cfa.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport {AppBar, Paper, Toolbar, Typography} from '@material-ui/core'\nimport DoneAllSharpIcon from '@material-ui/icons/DoneAllSharp';\nimport './Layout.scss';\n\n\nconst Layout = memo(props => (\n    <Paper elevation={0}  style={{padding: 0, margin: 0}}>\n        <AppBar color=\"primary\" position=\"static\" style={{ height: 62 }}>\n            <Toolbar style={{height: 62 }}>\n                <a href=\"https://www.linkedin.com/in/joseph-liao-8a188635/\" className=\"link\">\n                    <Typography id=\"titleWrapper\" >\n                        <DoneAllSharpIcon/> React Todo List: (Code Exercise)\n                    </Typography>\n                </a>\n            </Toolbar>\n        </AppBar>\n        {props.children}\n    </Paper>\n));\n\nexport default Layout;","\nimport React, { memo } from 'react';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport {Paper, FormControl, InputLabel, Button} from '@material-ui/core';\nimport './Wrapper.scss';   \n\nconst Wrapper = memo(props =>(\n  <Paper style={{margin:15, padding:15}}>\n    <div className=\"Wrapper\">\n        <FormControl \n          noValidate \n          autoComplete=\"off\" \n          variant=\"outlined\"\n          value={props.inputValue}\n          onChange={props.onInputChange}\n          onKeyPress={props.onInputKeyPress}\n          fullWidth>\n          <InputLabel htmlFor=\"outlined-adornment-amount\">Adding your next task?</InputLabel>\n          <OutlinedInput id=\"test-input\" labelWidth={170}/>\n        </FormControl>\n  \n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          onClick={props.onButtonClick}>\n                Add Tasks\n        </Button>\n    </div>\n  </Paper>\n));\n\nexport default Wrapper;","import React, { memo } from \"react\";\n\nimport {\n  ListItem,\n  Checkbox,\n  IconButton,\n  ListItemText,\n  ListItemSecondaryAction\n} from \"@material-ui/core\";\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\n\nconst TDListItem = memo(props => (\n  <ListItem divider={props.divider}>\n    <Checkbox\n      color=\"secondary\"\n      onClick={props.onCheckBoxToggle}\n      checked={props.checked}\n      disableRipple\n    />\n    <ListItemText primary={props.text} />\n    <ListItemSecondaryAction>\n        <IconButton \n          color=\"primary\"\n          aria-label=\"Delete Todo\" \n          onClick={props.onButtonClick}>\n        <DeleteOutlined />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n));\n\nexport default TDListItem;\n","import { List, Paper} from \"@material-ui/core\";\nimport React,{memo} from \"react\";\nimport './ListContainer.scss';\nimport TDListItem from \"./TDListItem\";\n\nconst ListContainer = memo(props =>(\n  <>\n  {props.items.length > 0 && (\n  <Paper style={{margin:16}}>\n     <List style={{overflow: \"scroll\"}}>\n       {props.items.map((td, index) =>(\n        <TDListItem \n        {...td}\n        key={`TodoItem.${index}`}\n        divider ={index !== props.items.length - 1}\n        onButtonClick={()=> props.onItemRemove(index)}\n        onCheckBoxToggle = {()=> props.onItemCheck(index)}\n        />\n       ))}\n      \n     </List>\n  </Paper>\n  )}\n  </>\n));\n\nexport default ListContainer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React,{memo} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useInputValue, useTodos} from './test-hooks';\nimport Layout from './components/Layout';\nimport Wrapper from './components/Wrapper';\nimport ListContainer from './components/ListContainer';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst TodoApp = memo((props) => {\n  const { inputValue, changeInput, clearInput, keyInput } = useInputValue();\n  const { todos, addTodo, checkTodo, removeTodo } = useTodos();\n\n  const clearInputAndAddTodo = (_) => {\n    clearInput();\n    addTodo(inputValue);\n  };\n\n  return (\n    <Layout>\n      <Wrapper\n        inputValue={inputValue}\n        onInputChange={changeInput}\n        onButtonClick={clearInputAndAddTodo}\n        onInputKeyPress={(event) => keyInput(event, clearInputAndAddTodo)}\n      />\n      <ListContainer\n        items={todos}\n        onItemCheck={(index) => checkTodo(index)}\n        onItemRemove={(index) => removeTodo(index)}\n      />\n    </Layout>\n  );\n});\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<TodoApp />, rootElement);\n\nreportWebVitals();\n","import { useState } from \"react\";\n\nexport const useInputValue = (initialValue = \"\") => {\n  const [inputValue, setInputValue] = useState(initialValue);\n\n  return {\n    inputValue,\n    changeInput: event => setInputValue(event.target.value),\n    clearInput: () => setInputValue(\"\"),\n    keyInput: (event, callback) => {\n      if (event.which === 13 || event.keyCode === 13) {\n        callback(inputValue);\n        return true;\n      }\n\n      return false;\n    }\n  };\n};\n\nexport const useTodos = (initialValue = []) => {\n  const [todos, setTodos] = useState(initialValue);\n\n  return {\n    todos,\n    addTodo: text => {\n      if (text !== \"\") {\n        setTodos(\n          todos.concat({\n            text,\n            checked: false\n          })\n        );\n      }\n    },\n    checkTodo: idx => {\n      setTodos(\n        todos.map((todo, index) => {\n          if (idx === index) {\n            todo.checked = !todo.checked;\n          }\n\n          return todo;\n        })\n      );\n    },\n    removeTodo: idx => {\n      setTodos(todos.filter((todo, index) => idx !== index));\n    }\n  };\n};\n"],"sourceRoot":""}